"use strict";var config={mode:yo.getQueryString("mode"),role:localStorage.userRole,reportId:yo.getQueryString("id"),api_getMonthData:"/order/getMonthData.do",api_saveMonthData:"/order/saveMonthData"};window.app=new Vue({el:"#app",data:{c:{jdjdmb:"",sjwc:"",jhrate:"",sjrate:"",gbs:"",yjja:""},year:(new Date).getFullYear(),month:(new Date).getMonth()+1,userName:JSON.parse(localStorage.userInfo).list[0].NAME,thisMonth_hkje:0,thisMonth_yjsr:0,nextMonth_hkje:0,nextMonth_yjsr:0,thisMonth:[],nextMonth:[]},created:function(){var t=this;t.loading(),$.ajax({url:config.api_getMonthData,async:!1,data:{id:config.reportId},success:function(e){t.c=$.extend({},t.c,e.result),e.result.userName&&(t.userName=e.result.userName),document.getElementById("app").classList.remove("hide"),t.loading("close");var n=[],r=t.c.rq.split("@bzf@"),o=t.c.zqr.split("@bzf@"),s=t.c.zwr.split("@bzf@"),a=t.c.hkje.split("@bzf@"),i=t.c.yjsr.split("@bzf@"),h=t.c.jhnwzd.split("@bzf@"),l=0;for(r.length=1==(1==r.length&&""!=r[0])?r.length:r.length-1,l=0;l<r.length;l++)n[l]={},n[l].rq=r[l],n[l].zqr=o[l],n[l].zwr=s[l],n[l].hkje=a[l],n[l].yjsr=i[l],n[l].jhnwzd=h[l],t.thisMonth_hkje+=Number(a[l]),t.thisMonth_yjsr+=Number(i[l]);n[0].rq&&(t.thisMonth=n);var c=[],d=t.c.yjrq.split("@bzf@"),p=t.c.yjzqr.split("@bzf@"),f=t.c.yjzwr.split("@bzf@"),j=t.c.yjhkje.split("@bzf@"),g=t.c.yjyjsr.split("@bzf@"),y=[];for(t.c.yjndfx&&t.c.yjndfx[0]&&(y=t.c.yjndfx.split("@bzf@")),d.length=1==d.length&&""!=yjrp[0]?d.length:d.length-1,l=0,l=0;l<d.length;l++)c[l]={},c[l].rq=d[l],c[l].zqr=p[l],c[l].zwr=f[l],c[l].hkje=j[l],c[l].yjsr=g[l],c[l].ndfx=y[l],t.nextMonth_hkje+=Number(j[l]),t.nextMonth_yjsr+=Number(g[l]);c[0].rq&&(t.nextMonth=c)}}),config.mode&&$("#app").find("input,textarea").prop("readonly",!0)},methods:{loading:function(t){"close"==t?layer.close(this.loadingSwitch):this.loadingSwitch=layer.load(3)},save:function(t){this.c.yjndfx=[];for(var e=0;e<this.nextMonth.length;e++)this.c.yjndfx.push(this.nextMonth[e].ndfx);this.c.yjndfx=this.c.yjndfx.join("@bzf@"),this.c.status=t,this.c.title=document.getElementById("title").innerHTML,$.post(config.api_saveMonthData,this.c,function(t){(t.error="00")?(parent&&parent.layer.closeAll(),parent&&parent.location.reload()):layer.msg(t.msg)})},edit:function(t){this.c.id=config.reportId,this.save(t)}}}),window.parentFnc=function(t){layer.closeAll(),window.app.getCaseRecord(window.app.type)};
//# sourceMappingURL=data:application/json;charset=utf8;base64,
